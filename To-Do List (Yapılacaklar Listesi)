# 1. To-Do List (YapÄ±lacaklar Listesi)

class Task:
    def __init__(self, name):
        self.name = name
        self.completed = False

    def mark_completed(self):
        self.completed = True

    def __str__(self):
        return f"{'[X]' if self.completed else '[ ]'} {self.name}"


class TaskManager:
    def __init__(self):
        self.tasks = []
        self.load_tasks()

    def add_task(self, name):
        self.tasks.append(Task(name))
        self.save_tasks()

    def complete_task(self, index):
        if 0 <= index < len(self.tasks):
            self.tasks[index].mark_completed()
            self.save_tasks()

    def delete_task(self, index):
        if 0 <= index < len(self.tasks):
            del self.tasks[index]
            self.save_tasks()

    def show_tasks(self):
        print("\nPending Tasks:")
        for i, task in enumerate(self.tasks):
            if not task.completed:
                print(f"{i}. {task}")
        print("\nCompleted Tasks:")
        for i, task in enumerate(self.tasks):
            if task.completed:
                print(f"{i}. {task}")

    def save_tasks(self):
        with open("tasks.txt", "w") as file:
            for task in self.tasks:
                file.write(f"{task.name}|{task.completed}\n")

    def load_tasks(self):
        try:
            with open("tasks.txt", "r") as file:
                for line in file:
                    name, completed = line.strip().split("|")
                    task = Task(name)
                    task.completed = completed == "True"
                    self.tasks.append(task)
        except FileNotFoundError:
            pass


def todo_app():
    manager = TaskManager()
    while True:
        print("\n1. Add Task\n2. Complete Task\n3. Delete Task\n4. Show Tasks\n5. Exit")
        choice = input("Choose an option: ")
        if choice == "1":
            name = input("Enter task name: ")
            manager.add_task(name)
        elif choice == "2":
            index = int(input("Enter task index to complete: "))
            manager.complete_task(index)
        elif choice == "3":
            index = int(input("Enter task index to delete: "))
            manager.delete_task(index)
        elif choice == "4":
            manager.show_tasks()
        elif choice == "5":
            break
        else:
            print("Invalid choice. Please try again.")
